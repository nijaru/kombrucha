name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release

      - name: Run tests
        run: cargo test --release

      - name: Verify system integrity (Homebrew not corrupted)
        run: |
          # Ensure tests didn't modify system Homebrew installation
          # All dangerous integration tests were removed in Phase 1 (01e7c75)
          # This check verifies Cellar is still intact and readable
          if [ -d "/opt/homebrew" ]; then
            echo "Checking Homebrew Cellar integrity..."
            if [ ! -d "/opt/homebrew/Cellar" ] || [ ! -r "/opt/homebrew/Cellar" ]; then
              echo "❌ ERROR: Homebrew Cellar is missing or corrupted!"
              exit 1
            fi
            # Verify we can still run brew commands
            if ! brew --version >/dev/null 2>&1; then
              echo "❌ ERROR: brew command is broken!"
              exit 1
            fi
            echo "✓ Homebrew integrity verified"
          fi

  lint:
    name: Lint
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy -- -D warnings -A clippy::collapsible_if -A clippy::single_match -A clippy::useless_format -A clippy::clone_on_copy -A clippy::manual_is_multiple_of -A clippy::double_ended_iterator_last -A clippy::type_complexity

  # Integration tests removed - they were causing system corruption
  # See ai/TESTING_REMEDIATION.md for the new testing strategy using:
  # - testcontainers-rs for Docker-based integration tests
  # - brew test-bot --local for formula testing
  # - Proper test isolation that never touches system directories

  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release
